name: Build and Deploy Documentation

# Trigger on pushes to main branch and changes to documentation
on:
  push:
    branches: [master, main]
    # No paths filter - deploy docs on every push to master
  pull_request:
    branches: [master, main]
    paths:
      - 'src/**/*.md'
      - 'src/**/*.mdx'
      - 'docusaurus.config.js'
      - 'sidebars.js'
      - 'openapi.yaml'
  # Manual trigger
  workflow_dispatch:

# Required permissions for GitHub Pages deployment and PR comments
permissions:
  contents: read
  pages: write
  id-token: write
  issues: write
  pull-requests: write

# Concurrency group to prevent concurrent deployments
concurrency:
  group: 'docs-${{ github.ref }}'
  cancel-in-progress: false

jobs:
  # Build documentation
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Setup pnpm
        uses: pnpm/action-setup@v3
        with:
          version: 8

      - name: Enable Corepack for yarn compatibility
        run: corepack enable

      - name: Get pnpm store directory
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV

      - name: Setup pnpm cache
        uses: actions/cache@v4
        with:
          # GitHub automatically generates STORE_PATH env var from pnpm store path command
          path: ${{ env.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install dependencies
        run: pnpm install

      - name: Generate OpenAPI specification
        run: pnpm docs:openapi

      - name: OpenAPI Documentation Status
        run: |
          echo "📚 Using Redocusaurus for OpenAPI documentation"
          echo "✅ OpenAPI spec generated at: src/app/api/openapi.json"

      - name: Build Docusaurus site
        run: pnpm docs:build
        env:
          NODE_ENV: production

      - name: Upload Pages artifact
        if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./build/

  # Deploy to GitHub Pages (only on main/master branch)
  deploy:
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    concurrency:
      group: 'github-pages-deploy'
      cancel-in-progress: false
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4

  # Build check for PRs (no deployment)
  build-check:
    if: github.event_name == 'pull_request'
    runs-on: ubuntu-latest
    permissions:
      contents: read
      issues: write
      pull-requests: write
    concurrency:
      group: 'docs-pr-${{ github.event.pull_request.number }}'
      cancel-in-progress: true
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Setup pnpm
        uses: pnpm/action-setup@v3
        with:
          version: 8

      - name: Enable Corepack for yarn compatibility
        run: corepack enable

      - name: Get pnpm store directory
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV

      - name: Setup pnpm cache
        uses: actions/cache@v4
        with:
          # GitHub automatically generates STORE_PATH env var from pnpm store path command
          path: ${{ env.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install dependencies
        run: pnpm install

      - name: OpenAPI Documentation Status
        run: |
          echo "📚 Using Redocusaurus for OpenAPI documentation"
          echo "✅ API docs will be automatically generated during build"

      - name: Build Docusaurus site (PR check)
        run: pnpm docs:build
        env:
          NODE_ENV: production

      - name: Check for build errors
        run: |
          if [ ! -d "build" ]; then
            echo "❌ Docusaurus build failed - build directory not created"
            exit 1
          fi

          if [ ! -f "build/index.html" ]; then
            echo "❌ Docusaurus build failed - index.html not generated"
            exit 1
          fi

          echo "✅ Docusaurus build successful"
          echo "📊 Generated files:"
          find build -name "*.html" | head -10

      - name: Comment on PR
        if: github.event_name == 'pull_request'
        continue-on-error: true
        uses: actions/github-script@v6
        with:
          script: |
            const fs = require('fs');
            const path = require('path');

            // Count generated files
            const buildDir = 'build';
            const htmlFiles = [];

            function findHtmlFiles(dir) {
              try {
                const files = fs.readdirSync(dir);
                files.forEach(file => {
                  const filePath = path.join(dir, file);
                  const stat = fs.statSync(filePath);
                  if (stat.isDirectory()) {
                    findHtmlFiles(filePath);
                  } else if (file.endsWith('.html')) {
                    htmlFiles.push(filePath.replace('build/', ''));
                  }
                });
              } catch (e) {
                console.log(`Error reading directory ${dir}: ${e.message}`);
              }
            }

            findHtmlFiles(buildDir);

            const comment = `## 📚 Documentation Build Check

            ✅ **Docusaurus build successful!**

            **Generated Pages:** ${htmlFiles.length}
            **Preview:** Documentation will be available at: \`https://underwood-inc.github.io/idling.app__UI/\`

            **Key Pages:**
            ${htmlFiles.slice(0, 10).map(f => `- \`${f}\``).join('\n')}
            ${htmlFiles.length > 10 ? `\n... and ${htmlFiles.length - 10} more pages` : ''}

            The documentation site will be automatically deployed when this PR is merged to main.

            🚀 **Features:**
            - Co-located documentation from \`src/**/*.md\` files
            - Interactive API documentation with OpenAPI integration
            - Dark theme matching your main application`;

            // Create a comment on the pull request with build results
            await github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: comment
            });
