name: Build and Deploy Documentation

# Trigger on pushes to main branch and changes to documentation
on:
  push:
    branches: [master, main]
    paths:
      - 'DOCS/**'
      - '.github/workflows/docs.yml'
  pull_request:
    branches: [master, main]
    paths:
      - 'DOCS/**'
  # Manual trigger
  workflow_dispatch:

# Required permissions for GitHub Pages deployment and PR comments
permissions:
  contents: read
  pages: write
  id-token: write
  issues: write
  pull-requests: write

# Concurrency group to prevent concurrent deployments
concurrency:
  group: 'pages'
  cancel-in-progress: false

jobs:
  # Build documentation
  build:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./DOCS
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: '3.3.4'
          bundler-cache: true
          working-directory: './DOCS'

      - name: Setup Pages
        id: pages
        uses: actions/configure-pages@v4

      - name: Install Jekyll dependencies
        run: bundle install

      - name: Build Jekyll site
        run: bundle exec jekyll build --baseurl "${{ steps.pages.outputs.base_path }}"
        env:
          JEKYLL_ENV: production

      - name: Upload Pages artifact
        if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./DOCS/_site/

  # Deploy to GitHub Pages (only on main/master branch)
  deploy:
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout repository for badge updates
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup Python for badge generation
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install interrogate

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4

  # Build check for PRs (no deployment)
  build-check:
    if: github.event_name == 'pull_request'
    runs-on: ubuntu-latest
    permissions:
      contents: read
      issues: write
      pull-requests: write
    defaults:
      run:
        working-directory: ./DOCS
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: '3.3.4'
          bundler-cache: true
          working-directory: './DOCS'

      - name: Install Jekyll dependencies
        run: bundle install

      - name: Build Jekyll site (PR check)
        run: bundle exec jekyll build --baseurl "/idling.app__UI"
        env:
          JEKYLL_ENV: production

      - name: Check for build errors
        run: |
          if [ ! -d "_site" ]; then
            echo "❌ Jekyll build failed - _site directory not created"
            exit 1
          fi

          if [ ! -f "_site/index.html" ]; then
            echo "❌ Jekyll build failed - index.html not generated"
            exit 1
          fi

          echo "✅ Jekyll build successful"
          echo "📊 Generated files:"
          find _site -name "*.html" | head -10

      - name: Comment on PR
        if: github.event_name == 'pull_request'
        continue-on-error: true
        uses: actions/github-script@v6
        env:
          WORKING_DIR: ./DOCS
        with:
          script: |
            const workingDir = process.env.WORKING_DIR || '.';
            process.chdir(workingDir);
            const fs = require('fs');
            const path = require('path');

            // Count generated files
            const siteDir = '_site';
            const htmlFiles = [];

            function findHtmlFiles(dir) {
              const files = fs.readdirSync(dir);
              files.forEach(file => {
                const filePath = path.join(dir, file);
                const stat = fs.statSync(filePath);
                if (stat.isDirectory()) {
                  findHtmlFiles(filePath);
                } else if (file.endsWith('.html')) {
                  htmlFiles.push(filePath.replace('_site/', ''));
                }
              });
            }

            findHtmlFiles(siteDir);

            const comment = `## 📚 Documentation Build Check

            ✅ **Jekyll build successful!**

            **Generated Pages:** ${htmlFiles.length}
            **Preview:** Documentation will be available at: \`https://underwood-inc.github.io/idling.app__UI/\`

            **Key Pages:**
            ${htmlFiles.slice(0, 10).map(f => `- \`${f}\``).join('\n')}
            ${htmlFiles.length > 10 ? `\n... and ${htmlFiles.length - 10} more pages` : ''}

            The documentation site will be automatically deployed when this PR is merged to main.`;

            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: comment
            });
