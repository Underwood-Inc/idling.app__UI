// Code Blocks and Syntax Highlighting
// Enhanced code styling with Monokai theme

// ENHANCED CODE BLOCKS - Fixed with !important to override theme defaults
pre, code {
  font-family: 'Fira Code VF', 'Fira Code', 'SF Mono', Monaco, 'Cascadia Code', 'Roboto Mono', Consolas, 'Courier New', monospace !important;
  font-size: var(--text-sm) !important;
  font-weight: 400;
  line-height: 1.5;
  
  // Enable ligatures for enhanced readability
  font-variant-ligatures: common-ligatures contextual !important;
  font-feature-settings: "liga" 1, "calt" 1 !important;
  -webkit-font-feature-settings: "liga" 1, "calt" 1 !important;
  -moz-font-feature-settings: "liga" 1, "calt" 1 !important;
}

// Inline code - Force dark styling
code {
  background-color: var(--dark-bg-code-light) !important;
  color: var(--text-code) !important;
  padding: var(--space-xs) var(--space-sm) !important;
  border-radius: var(--radius-sm) !important;
  border: 1px solid var(--border-code) !important;
  font-size: 0.9em !important;
  white-space: nowrap;
}

// Code blocks - Force dark styling with NO line backgrounds
pre {
  background-color: var(--dark-bg-code) !important;
  color: var(--text-code) !important;
  padding: var(--space-md) !important;
  border-radius: var(--radius-lg) !important;
  border: 1px solid var(--border-code) !important;
  overflow-x: auto;
  margin: var(--space-xl) 0 !important;
  box-shadow: var(--shadow-lg);
  position: relative;
  
  // Custom scrollbar for code blocks
  &::-webkit-scrollbar {
    height: 8px;
    width: 8px;
  }
  
  &::-webkit-scrollbar-track {
    background: var(--dark-bg-secondary);
    border-radius: var(--radius-sm);
  }
  
  &::-webkit-scrollbar-thumb {
    background: var(--border-code);
    border-radius: var(--radius-sm);
    
    &:hover {
      background: var(--hunyadi-yellow);
    }
  }
  
  // Code inside pre blocks
  code {
    background: none !important;
    border: none !important;
    padding: 0 !important;
    font-size: inherit !important;
    color: inherit !important;
    white-space: pre;
    border-radius: 0 !important;
  }
  
  // Add subtle left border accent
  &::before {
    content: '';
    position: absolute;
    inset-inline-start: 0;
    inset-block-start: 0;
    inset-block-end: 0;
    width: 4px;
    background: linear-gradient(
      to bottom,
      var(--hunyadi-yellow),
      var(--jasmine),
      var(--hunyadi-yellow)
    );
    border-radius: var(--radius-lg) 0 0 var(--radius-lg);
  }
  
  // Special styling for shell/terminal code blocks
  &.language-bash,
  &.language-shell,
  &.language-zsh,
  &.language-powershell {
    &::before {
      background: linear-gradient(
        to bottom,
        var(--cornflower-blue),
        var(--hunyadi-yellow),
        var(--cornflower-blue)
      ) !important;
    }
    
    // Add terminal-like header
    &::after {
      content: '\2022 \2022 \2022';
      position: absolute;
      top: 8px;
      right: 12px;
      color: rgba(255, 255, 255, 0.3);
      font-size: 8px;
      letter-spacing: 2px;
      pointer-events: none;
    }
  }
}

// FIX: Remove line backgrounds and table-style formatting that Rouge/Shiki sometimes adds
pre .line,
pre .code-line,
pre tr,
pre td,
pre table {
  background: none !important;
  background-color: transparent !important;
  border: none !important;
  padding: 0 !important;
  margin: 0 !important;
}

// JEKYLL ROUGE SYNTAX HIGHLIGHTER FIXES
// Handle the extra wrapper elements that Jekyll/Rouge creates
.highlighter-rouge {
  margin: var(--space-xl) 0 !important;
  
  // Remove default styling from the outer wrapper
  background: none !important;
  border: none !important;
  padding: 0 !important;
  border-radius: 0 !important;
  
  // The inner .highlight div should be transparent
  .highlight {
    background: none !important;
    border: none !important;
    padding: 0 !important;
    margin: 0 !important;
    border-radius: 0 !important;
    
    // The pre element is where our styling should be applied
    pre {
      background-color: var(--dark-bg-code) !important;
      color: var(--text-code) !important;
      padding: var(--space-md) !important;
      border-radius: var(--radius-lg) !important;
      border: 1px solid var(--border-code) !important;
      margin: 0 !important;
      overflow-x: auto;
      box-shadow: var(--shadow-lg);
      position: relative;
      
      // Ensure code inside pre has no extra styling
      code {
        background: none !important;
        border: none !important;
        padding: 0 !important;
        color: inherit !important;
        font-size: inherit !important;
        white-space: pre;
        border-radius: 0 !important;
      }
      
      // Add subtle left border accent
      &::before {
        content: '';
        position: absolute;
        inset-inline-start: 0;
        inset-block-start: 0;
        inset-block-end: 0;
        width: 4px;
        background: linear-gradient(
          to bottom,
          var(--hunyadi-yellow),
          var(--jasmine),
          var(--hunyadi-yellow)
        );
        border-radius: var(--radius-lg) 0 0 var(--radius-lg);
      }
    }
  }
  
  // Special styling for shell/terminal code blocks
  &.language-bash,
  &.language-shell,
  &.language-zsh,
  &.language-powershell {
    .highlight pre {
      &::before {
        background: linear-gradient(
          to bottom,
          var(--cornflower-blue),
          var(--hunyadi-yellow),
          var(--cornflower-blue)
        ) !important;
      }
      
      // Add terminal-like header
      &::after {
        content: '\2022 \2022 \2022';
        position: absolute;
        top: 8px;
        right: 12px;
        color: rgba(255, 255, 255, 0.3);
        font-size: 8px;
        letter-spacing: 2px;
        pointer-events: none;
      }
    }
  }
}

// ENHANCED MONOKAI THEME FOR ROUGE
// Additional Monokai-inspired syntax highlighting tokens
.highlight {
  // Enhanced token colors for better Monokai appearance
  .gp { color: #f8f8f2 !important; } // Generic.Prompt
  .gt { color: #f92672 !important; } // Generic.Traceback
  .kc { color: #ae81ff !important; } // Keyword.Constant (true, false, null)
  .kd { color: #66d9ef !important; font-style: italic !important; } // Keyword.Declaration (var, let, const)
  .kn { color: #f92672 !important; } // Keyword.Namespace (import, from)
  .kp { color: #66d9ef !important; } // Keyword.Pseudo
  .kr { color: #66d9ef !important; } // Keyword.Reserved
  .kt { color: #66d9ef !important; font-style: italic !important; } // Keyword.Type
  .ld { color: #e6db74 !important; } // Literal.Date
  .m { color: #ae81ff !important; } // Literal.Number
  .s { color: #e6db74 !important; } // Literal.String
  .na { color: #a6e22e !important; } // Name.Attribute
  .nb { color: #f8f8f2 !important; } // Name.Builtin
  .nc { color: #a6e22e !important; font-weight: bold !important; } // Name.Class
  .no { color: #66d9ef !important; } // Name.Constant
  .nd { color: #a6e22e !important; } // Name.Decorator
  .ni { color: #f8f8f2 !important; } // Name.Entity
  .ne { color: #a6e22e !important; font-weight: bold !important; } // Name.Exception
  .nf { color: #a6e22e !important; } // Name.Function
  .nl { color: #f8f8f2 !important; } // Name.Label
  .nn { color: #f8f8f2 !important; } // Name.Namespace
  .nx { color: #a6e22e !important; } // Name.Other
  .py { color: #f8f8f2 !important; } // Name.Property
  .nt { color: #f92672 !important; } // Name.Tag
  .nv { color: #f8f8f2 !important; } // Name.Variable
  .ow { color: #f92672 !important; } // Operator.Word
  .w { color: #f8f8f2 !important; } // Text.Whitespace
  .mf { color: #ae81ff !important; } // Literal.Number.Float
  .mh { color: #ae81ff !important; } // Literal.Number.Hex
  .mi { color: #ae81ff !important; } // Literal.Number.Integer
  .mo { color: #ae81ff !important; } // Literal.Number.Oct
  .sb { color: #e6db74 !important; } // Literal.String.Backtick
  .sc { color: #e6db74 !important; } // Literal.String.Char
  .sd { color: #e6db74 !important; } // Literal.String.Doc
  .s2 { color: #e6db74 !important; } // Literal.String.Double
  .se { color: #ae81ff !important; } // Literal.String.Escape
  .sh { color: #e6db74 !important; } // Literal.String.Heredoc
  .si { color: #e6db74 !important; } // Literal.String.Interpol
  .sx { color: #e6db74 !important; } // Literal.String.Other
  .sr { color: #e6db74 !important; } // Literal.String.Regex
  .s1 { color: #e6db74 !important; } // Literal.String.Single
  .ss { color: #ae81ff !important; } // Literal.String.Symbol
  .bp { color: #f8f8f2 !important; } // Name.Builtin.Pseudo
  .vc { color: #f8f8f2 !important; } // Name.Variable.Class
  .vg { color: #f8f8f2 !important; } // Name.Variable.Global
  .vi { color: #f8f8f2 !important; } // Name.Variable.Instance
  .il { color: #ae81ff !important; } // Literal.Number.Integer.Long
  
  // Language-specific enhancements
  // JavaScript/TypeScript
  .kd { color: #66d9ef !important; } // var, let, const
  .kr { color: #f92672 !important; } // return, throw, break, continue
  
  // Python
  .kn { color: #f92672 !important; } // import, from, as
  .k { color: #66d9ef !important; } // def, class, if, for, while
  
  // Ruby
  .k { color: #f92672 !important; } // def, class, module, end
  .kp { color: #66d9ef !important; } // self, super
  
  // SQL
  .k { color: #f92672 !important; } // SELECT, FROM, WHERE, etc.
  .kt { color: #66d9ef !important; } // VARCHAR, INT, etc.
}

// Fix table-style code blocks (Rouge linenos)
.highlight table,
.highlight tbody,
.highlight tr,
.highlight td {
  background: none !important;
  background-color: transparent !important;
  border: none !important;
  border-collapse: collapse !important;
  padding: 0 !important;
  margin: 0 !important;
}

// Fix line number styling
.highlight .lineno,
.highlight .gutter {
  background: none !important;
  background-color: transparent !important;
  color: var(--text-muted) !important;
  border: none !important;
  padding-right: var(--space-md) !important;
  user-select: none;
}

// Override any theme defaults for code blocks
.post-content pre,
.page-content pre,
article pre,
main pre {
  background-color: var(--dark-bg-code) !important;
  color: var(--text-code) !important;
  border: 1px solid var(--border-code) !important;
}

// Syntax highlighting improvements - Override Rouge/Shiki defaults
// Only apply to standalone .highlight divs, not those inside .highlighter-rouge
.highlight:not(.highlighter-rouge .highlight) {
  background-color: var(--dark-bg-code) !important;
  border-radius: var(--radius-lg);
  margin: var(--space-md) 0;
  padding: var(--space-md);
  border: 1px solid var(--border-code) !important;
  
  pre {
    margin: 0;
    padding: 0;
    border: none !important;
    background: none !important;
    border-radius: 0;
  }
}

// Enhanced syntax highlighting colors (Monokai-inspired) - Apply globally to .highlight
.highlight {
  .c { color: #75715e !important; } // Comment
  .err { color: #960050 !important; background-color: #1e0010 !important; } // Error
  .k { color: #66d9ef !important; } // Keyword
  .l { color: #ae81ff !important; } // Literal
  .n { color: #f8f8f2 !important; } // Name
  .o { color: #f92672 !important; } // Operator
  .p { color: #f8f8f2 !important; } // Punctuation
  .cm { color: #75715e !important; } // Comment.Multiline
  .cp { color: #75715e !important; } // Comment.Preproc
  .c1 { color: #75715e !important; } // Comment.Single
  .cs { color: #75715e !important; } // Comment.Special
  .gd { color: #f92672 !important; } // Generic.Deleted
  .ge { font-style: italic !important; } // Generic.Emph
  .gi { color: #a6e22e !important; } // Generic.Inserted
  .gs { font-weight: bold !important; } // Generic.Strong
  .gu { color: #75715e !important; } // Generic.Subheading
  .kc { color: #66d9ef !important; } // Keyword.Constant
  .kd { color: #66d9ef !important; } // Keyword.Declaration
  .kn { color: #f92672 !important; } // Keyword.Namespace
  .kp { color: #66d9ef !important; } // Keyword.Pseudo
  .kr { color: #66d9ef !important; } // Keyword.Reserved
  .kt { color: #66d9ef !important; } // Keyword.Type
  .ld { color: #e6db74 !important; } // Literal.Date
  .m { color: #ae81ff !important; } // Literal.Number
  .s { color: #e6db74 !important; } // Literal.String
  .na { color: #a6e22e !important; } // Name.Attribute
  .nb { color: #f8f8f2 !important; } // Name.Builtin
  .nc { color: #a6e22e !important; } // Name.Class
  .no { color: #66d9ef !important; } // Name.Constant
  .nd { color: #a6e22e !important; } // Name.Decorator
  .ni { color: #f8f8f2 !important; } // Name.Entity
  .ne { color: #a6e22e !important; } // Name.Exception
  .nf { color: #a6e22e !important; } // Name.Function
  .nl { color: #f8f8f2 !important; } // Name.Label
  .nn { color: #f8f8f2 !important; } // Name.Namespace
  .nx { color: #a6e22e !important; } // Name.Other
  .py { color: #f8f8f2 !important; } // Name.Property
  .nt { color: #f92672 !important; } // Name.Tag
  .nv { color: #f8f8f2 !important; } // Name.Variable
  .ow { color: #f92672 !important; } // Operator.Word
  .w { color: #f8f8f2 !important; } // Text.Whitespace
  .mf { color: #ae81ff !important; } // Literal.Number.Float
  .mh { color: #ae81ff !important; } // Literal.Number.Hex
  .mi { color: #ae81ff !important; } // Literal.Number.Integer
  .mo { color: #ae81ff !important; } // Literal.Number.Oct
  .sb { color: #e6db74 !important; } // Literal.String.Backtick
  .sc { color: #e6db74 !important; } // Literal.String.Char
  .sd { color: #e6db74 !important; } // Literal.String.Doc
  .s2 { color: #e6db74 !important; } // Literal.String.Double
  .se { color: #ae81ff !important; } // Literal.String.Escape
  .sh { color: #e6db74 !important; } // Literal.String.Heredoc
  .si { color: #e6db74 !important; } // Literal.String.Interpol
  .sx { color: #e6db74 !important; } // Literal.String.Other
  .sr { color: #e6db74 !important; } // Literal.String.Regex
  .s1 { color: #e6db74 !important; } // Literal.String.Single
  .ss { color: #ae81ff !important; } // Literal.String.Symbol
  .bp { color: #f8f8f2 !important; } // Name.Builtin.Pseudo
  .vc { color: #f8f8f2 !important; } // Name.Variable.Class
  .vg { color: #f8f8f2 !important; } // Name.Variable.Global
  .vi { color: #f8f8f2 !important; } // Name.Variable.Instance
  .il { color: #ae81ff !important; } // Literal.Number.Integer.Long
}

// Additional Rouge syntax highlighting classes - Only apply to standalone highlights
.language-javascript:not(.highlighter-rouge), .language-js:not(.highlighter-rouge) {
  .highlight { background-color: var(--dark-bg-code) !important; }
}

.language-typescript:not(.highlighter-rouge), .language-ts:not(.highlighter-rouge) {
  .highlight { background-color: var(--dark-bg-code) !important; }
}

.language-python:not(.highlighter-rouge), .language-py:not(.highlighter-rouge) {
  .highlight { background-color: var(--dark-bg-code) !important; }
}

.language-sql:not(.highlighter-rouge) {
  .highlight { background-color: var(--dark-bg-code) !important; }
}

.language-bash:not(.highlighter-rouge), .language-shell:not(.highlighter-rouge) {
  .highlight { background-color: var(--dark-bg-code) !important; }
}

// UTILITY CLASSES FOR POWERSHELL-STYLE PROMPTS
// These can be used to manually style prompts in documentation
.ps-prompt {
  color: var(--cornflower-blue) !important;
  font-weight: bold !important;
  text-shadow: 0 0 3px rgba(116, 142, 249, 0.4) !important;
  
  &::before {
    content: '\276F\0020';
    color: var(--hunyadi-yellow) !important;
    font-weight: bold !important;
    margin-inline-end: 4px;
  }
}

.ps-path {
  color: var(--jasmine) !important;
  font-weight: 500 !important;
  text-decoration: underline !important;
  text-decoration-color: rgba(249, 223, 116, 0.3) !important;
}

.ps-command {
  color: var(--hunyadi-yellow) !important;
  font-weight: 600 !important;
  text-shadow: 0 0 2px rgba(237, 174, 73, 0.2) !important;
}

.ps-output-success {
  color: #51cf66 !important;
  background-color: rgba(81, 207, 102, 0.1) !important;
  padding: 2px 6px !important;
  border-radius: 3px !important;
  border-inline-start: 2px solid #51cf66 !important;
  padding-inline-start: 8px !important;
}

.ps-output-error {
  color: #ff6b6b !important;
  background-color: rgba(255, 107, 107, 0.1) !important;
  padding: 2px 6px !important;
  border-radius: 3px !important;
  border-inline-start: 2px solid #ff6b6b !important;
  padding-inline-start: 8px !important;
  font-weight: 500 !important;
}

.ps-output-warning {
  color: #ffd43b !important;
  background-color: rgba(255, 212, 59, 0.1) !important;
  padding: 2px 6px !important;
  border-radius: 3px !important;
  border-inline-start: 2px solid #ffd43b !important;
  padding-inline-start: 8px !important;
}

// POWERLEVEL10K-INSPIRED SHELL HIGHLIGHTING
// Enhanced bash/shell syntax highlighting with PowerShell-like styling
// Only apply to standalone highlights, not those inside .highlighter-rouge
.language-bash:not(.highlighter-rouge), .language-shell:not(.highlighter-rouge), .language-zsh:not(.highlighter-rouge), .language-powershell:not(.highlighter-rouge) {
  .highlight {
    background-color: #1e1e2e !important; // Darker background like PowerShell
    border-inline-start: 4px solid var(--cornflower-blue) !important; // Blue accent like PowerShell
    
    // Shell prompts (like PS C:\> or user@host:~$)
    .gp { 
      color: var(--cornflower-blue) !important; 
      font-weight: bold !important;
      text-shadow: 0 0 3px rgba(116, 142, 249, 0.3) !important;
    }
    
    // Commands and built-ins
    .nb, .nf { 
      color: var(--hunyadi-yellow) !important; 
      font-weight: 600 !important;
      text-shadow: 0 0 2px rgba(237, 174, 73, 0.2) !important;
    }
    
    // Parameters and flags (like -v, --help)
    .na, .nv { 
      color: var(--jasmine) !important; 
      font-weight: 500 !important;
    }
    
    // Strings and paths
    .s, .s1, .s2, .sb, .sh { 
      color: #a6e3a1 !important; // Soft green for paths/strings
      font-style: italic !important;
    }
    
    // Numbers and exit codes
    .m, .mi, .mf { 
      color: #fab387 !important; // Orange for numbers
      font-weight: 500 !important;
    }
    
    // Comments
    .c, .c1, .cm { 
      color: #6c7086 !important; // Muted purple for comments
      font-style: italic !important;
      opacity: 0.8;
    }
    
    // Operators and special characters
    .o, .p { 
      color: var(--jasmine) !important; 
      font-weight: 500 !important;
    }
    
    // Keywords (if, then, else, etc.)
    .k, .kd, .kn { 
      color: #cba6f7 !important; // Purple for keywords
      font-weight: 600 !important;
    }
    
    // Variables ($VAR, %VAR%)
    .nv, .vg, .vi { 
      color: #f38ba8 !important; // Pink for variables
      font-weight: 500 !important;
      text-decoration: underline !important;
      text-decoration-color: rgba(243, 139, 168, 0.3) !important;
    }
    
    // Error highlighting
    .err, .gt { 
      color: #f38ba8 !important; 
      background-color: rgba(243, 139, 168, 0.1) !important;
      font-weight: bold !important;
      border-radius: 2px !important;
      padding: 0 2px !important;
    }
    
    // Generic output (stdout)
    .go { 
      color: #cdd6f4 !important; // Light blue-white for output
      background-color: rgba(205, 214, 244, 0.05) !important;
      padding: 2px 4px !important;
      border-radius: 2px !important;
      font-family: inherit !important;
    }
  }
}

// SPECIAL POWERLEVEL10K-STYLE PROMPT STYLING
// Add special styling for shell prompts that look like Powerlevel10k
.highlight {
  // Match common prompt patterns and style them beautifully
  .gp {
    // Style for user@host:path$ patterns
    &:contains("@") {
      background: linear-gradient(90deg, var(--cornflower-blue), var(--hunyadi-yellow)) !important;
      -webkit-background-clip: text !important;
      -webkit-text-fill-color: transparent !important;
      background-clip: text !important;
    }
    
    // Style for PS> patterns (PowerShell)
    &:contains("PS") {
      color: var(--cornflower-blue) !important;
      font-weight: bold !important;
      text-shadow: 0 0 5px rgba(116, 142, 249, 0.4) !important;
    }
    
    // Style for $ and # prompt endings
    &:contains("$"), &:contains("#") {
      color: var(--hunyadi-yellow) !important;
      font-weight: bold !important;
      text-shadow: 0 0 3px rgba(237, 174, 73, 0.3) !important;
    }
  }
}

// ENHANCED SHELL COMMAND STYLING
// Make common shell commands look more prominent
// Only apply to standalone highlights, not those inside .highlighter-rouge
.language-bash:not(.highlighter-rouge), .language-shell:not(.highlighter-rouge), .language-zsh:not(.highlighter-rouge) {
  .highlight {
    // Common shell commands with special styling
    .nb {
      // Git commands
      &:contains("git") {
        color: #ff6b6b !important;
        font-weight: bold !important;
        text-shadow: 0 0 2px rgba(255, 107, 107, 0.3) !important;
      }
      
      // Docker commands
      &:contains("docker") {
        color: #4dabf7 !important;
        font-weight: bold !important;
        text-shadow: 0 0 2px rgba(77, 171, 247, 0.3) !important;
      }
      
      // Node/npm/yarn commands
      &:contains("npm"), &:contains("yarn"), &:contains("node") {
        color: #51cf66 !important;
        font-weight: bold !important;
        text-shadow: 0 0 2px rgba(81, 207, 102, 0.3) !important;
      }
      
      // System commands (ls, cd, mkdir, etc.)
      &:contains("ls"), &:contains("cd"), &:contains("mkdir"), &:contains("rm"), &:contains("cp"), &:contains("mv") {
        color: var(--hunyadi-yellow) !important;
        font-weight: 600 !important;
        text-shadow: 0 0 2px rgba(237, 174, 73, 0.2) !important;
      }
    }
  }
}

// TERMINAL OUTPUT STYLING
// Style different types of terminal output
.highlight {
  // Success messages (usually green)
  .go {
    &:contains("success"), &:contains("completed"), &:contains("done"), &:contains("\2713") {
      color: #51cf66 !important;
      background-color: rgba(81, 207, 102, 0.1) !important;
      border-inline-start: 2px solid #51cf66 !important;
      padding-inline-start: 6px !important;
    }
    
    // Warning messages (usually yellow)
    &:contains("warning"), &:contains("warn"), &:contains("\26A0") {
      color: #ffd43b !important;
      background-color: rgba(255, 212, 59, 0.1) !important;
      border-inline-start: 2px solid #ffd43b !important;
      padding-inline-start: 6px !important;
    }
    
    // Error messages (usually red)
    &:contains("error"), &:contains("failed"), &:contains("\2717"), &:contains("ERROR") {
      color: #ff6b6b !important;
      background-color: rgba(255, 107, 107, 0.1) !important;
      border-inline-start: 2px solid #ff6b6b !important;
      padding-inline-start: 6px !important;
      font-weight: 500 !important;
    }
    
    // Info messages (usually blue)
    &:contains("info"), &:contains("INFO"), &:contains("\2139") {
      color: var(--cornflower-blue) !important;
      background-color: rgba(116, 142, 249, 0.1) !important;
      border-inline-start: 2px solid var(--cornflower-blue) !important;
      padding-inline-start: 6px !important;
    }
  }
} 