-- Migration: Create comprehensive analytics tracking system
-- Description: Creates tables for page analytics, click tracking, geolocation, and VPN detection
-- Author: System Wizard üßô‚Äç‚ôÇÔ∏è
-- Date: 2025-01-13

-- ================================
-- PROBLEM ANALYSIS
-- ================================
-- Need comprehensive analytics system for subscription management dashboard including:
-- 1. Page hits and navigation tracking
-- 2. Click heatmaps and user interaction tracking
-- 3. Geolocation data for user distribution analysis
-- 4. VPN usage detection (non-interfering)
-- 5. Session analytics and user behavior patterns

-- ================================
-- ANALYTICS SESSIONS TABLE
-- ================================
CREATE TABLE IF NOT EXISTS ANALYTICS_SESSIONS (
    ID UUID PRIMARY KEY DEFAULT GEN_RANDOM_UUID(),
    USER_ID INTEGER REFERENCES USERS(ID) ON DELETE CASCADE,
    SESSION_TOKEN VARCHAR(255) NOT NULL,
    IP_ADDRESS INET NOT NULL,
    USER_AGENT TEXT NOT NULL,
    DEVICE_TYPE VARCHAR(50), -- 'desktop', 'mobile', 'tablet'
    BROWSER_NAME VARCHAR(100),
    BROWSER_VERSION VARCHAR(50),
    OS_NAME VARCHAR(100),
    OS_VERSION VARCHAR(50),
    SCREEN_WIDTH INTEGER,
    SCREEN_HEIGHT INTEGER,
    VIEWPORT_WIDTH INTEGER,
    VIEWPORT_HEIGHT INTEGER,
    TIMEZONE VARCHAR(100),
    LANGUAGE VARCHAR(10),
 
    -- Geolocation data
    COUNTRY_CODE VARCHAR(2),
    COUNTRY_NAME VARCHAR(100),
    REGION_NAME VARCHAR(100),
    CITY_NAME VARCHAR(100),
    LATITUDE DECIMAL(10, 8),
    LONGITUDE DECIMAL(11, 8),
 
    -- VPN/Proxy detection
    IS_VPN BOOLEAN DEFAULT FALSE,
    IS_PROXY BOOLEAN DEFAULT FALSE,
    IS_TOR BOOLEAN DEFAULT FALSE,
    VPN_PROVIDER VARCHAR(100),
    PROXY_TYPE VARCHAR(50),
 
    -- Session tracking
    FIRST_PAGE_URL TEXT,
    REFERRER_URL TEXT,
    UTM_SOURCE VARCHAR(100),
    UTM_MEDIUM VARCHAR(100),
    UTM_CAMPAIGN VARCHAR(100),
    UTM_TERM VARCHAR(100),
    UTM_CONTENT VARCHAR(100),
 
    -- Timestamps
    SESSION_START_AT TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP,
    LAST_ACTIVITY_AT TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP,
    SESSION_END_AT TIMESTAMP WITH TIME ZONE,
 
    -- Session metrics
    TOTAL_PAGE_VIEWS INTEGER DEFAULT 0,
    TOTAL_CLICKS INTEGER DEFAULT 0,
    TOTAL_SESSION_DURATION_SECONDS INTEGER DEFAULT 0,
    IS_BOUNCE BOOLEAN DEFAULT FALSE,
    CREATED_AT TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP,
    UPDATED_AT TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP
);

-- ================================
-- PAGE ANALYTICS TABLE
-- ================================
CREATE TABLE IF NOT EXISTS ANALYTICS_PAGE_VIEWS (
    ID UUID PRIMARY KEY DEFAULT GEN_RANDOM_UUID(),
    SESSION_ID UUID NOT NULL REFERENCES ANALYTICS_SESSIONS(ID) ON DELETE CASCADE,
    USER_ID INTEGER REFERENCES USERS(ID) ON DELETE CASCADE,
 
    -- Page data
    PAGE_URL TEXT NOT NULL,
    PAGE_TITLE VARCHAR(500),
    PAGE_PATH VARCHAR(1000) NOT NULL,
    PAGE_QUERY_PARAMS TEXT,
    PAGE_HASH VARCHAR(200),
 
    -- Referrer data
    REFERRER_URL TEXT,
    REFERRER_DOMAIN VARCHAR(255),
 
    -- Timing data
    PAGE_LOAD_TIME_MS INTEGER,
    DOM_READY_TIME_MS INTEGER,
    FIRST_CONTENTFUL_PAINT_MS INTEGER,
    LARGEST_CONTENTFUL_PAINT_MS INTEGER,
 
    -- Engagement metrics
    TIME_ON_PAGE_SECONDS INTEGER DEFAULT 0,
    SCROLL_DEPTH_PERCENT INTEGER DEFAULT 0,
    MAX_SCROLL_DEPTH_PERCENT INTEGER DEFAULT 0,
 
    -- Exit data
    IS_EXIT_PAGE BOOLEAN DEFAULT FALSE,
    EXIT_CLICK_ELEMENT VARCHAR(200),
    EXIT_CLICK_TEXT VARCHAR(500),
 
    -- Timestamps
    VIEWED_AT TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP,
    LEFT_AT TIMESTAMP WITH TIME ZONE,
    CREATED_AT TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP,
    UPDATED_AT TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP
);

-- ================================
-- CLICK ANALYTICS TABLE
-- ================================
CREATE TABLE IF NOT EXISTS ANALYTICS_CLICKS (
    ID UUID PRIMARY KEY DEFAULT GEN_RANDOM_UUID(),
    SESSION_ID UUID NOT NULL REFERENCES ANALYTICS_SESSIONS(ID) ON DELETE CASCADE,
    PAGE_VIEW_ID UUID NOT NULL REFERENCES ANALYTICS_PAGE_VIEWS(ID) ON DELETE CASCADE,
    USER_ID INTEGER REFERENCES USERS(ID) ON DELETE CASCADE,
 
    -- Click location data
    CLICK_X INTEGER NOT NULL,
    CLICK_Y INTEGER NOT NULL,
    VIEWPORT_WIDTH INTEGER,
    VIEWPORT_HEIGHT INTEGER,
 
    -- Element data
    ELEMENT_TAG VARCHAR(50),
    ELEMENT_ID VARCHAR(200),
    ELEMENT_CLASS VARCHAR(500),
    ELEMENT_TEXT VARCHAR(1000),
    ELEMENT_HREF VARCHAR(1000),
    ELEMENT_SELECTOR VARCHAR(1000),
 
    -- Click context
    CLICK_TYPE VARCHAR(20) DEFAULT 'click', -- 'click', 'right_click', 'double_click'
    MODIFIER_KEYS VARCHAR(50), -- 'ctrl', 'alt', 'shift', 'meta'
    -- Page context
    PAGE_URL TEXT NOT NULL,
    PAGE_TITLE VARCHAR(500),
 
    -- Timestamps
    CLICKED_AT TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP,
    CREATED_AT TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP
);

-- ================================
-- USER BEHAVIOR ANALYTICS TABLE
-- ================================
CREATE TABLE IF NOT EXISTS ANALYTICS_USER_BEHAVIOR (
    ID UUID PRIMARY KEY DEFAULT GEN_RANDOM_UUID(),
    SESSION_ID UUID NOT NULL REFERENCES ANALYTICS_SESSIONS(ID) ON DELETE CASCADE,
    USER_ID INTEGER REFERENCES USERS(ID) ON DELETE CASCADE,
 
    -- Behavior type
    BEHAVIOR_TYPE VARCHAR(50) NOT NULL, -- 'form_interaction', 'search', 'feature_usage', 'subscription_event'
    BEHAVIOR_CATEGORY VARCHAR(100),
    BEHAVIOR_ACTION VARCHAR(100) NOT NULL,
    BEHAVIOR_LABEL VARCHAR(200),
    BEHAVIOR_VALUE DECIMAL(10, 2),
 
    -- Context data
    PAGE_URL TEXT NOT NULL,
    ELEMENT_SELECTOR VARCHAR(1000),
    ADDITIONAL_DATA JSONB,
 
    -- Timestamps
    OCCURRED_AT TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP,
    CREATED_AT TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP
);

-- ================================
-- ERROR ANALYTICS TABLE
-- ================================
CREATE TABLE IF NOT EXISTS ANALYTICS_ERRORS (
    ID UUID PRIMARY KEY DEFAULT GEN_RANDOM_UUID(),
    SESSION_ID UUID NOT NULL REFERENCES ANALYTICS_SESSIONS(ID) ON DELETE CASCADE,
    PAGE_VIEW_ID UUID REFERENCES ANALYTICS_PAGE_VIEWS(ID) ON DELETE CASCADE,
    USER_ID INTEGER REFERENCES USERS(ID) ON DELETE CASCADE,
 
    -- Error details
    ERROR_TYPE VARCHAR(50) NOT NULL, -- 'javascript', 'promise_rejection', 'resource_load', 'network'
    ERROR_MESSAGE TEXT NOT NULL,
    ERROR_STACK TEXT,
    ERROR_URL TEXT,
    ERROR_LINE INTEGER,
    ERROR_COLUMN INTEGER,
 
    -- Context data
    PAGE_URL TEXT NOT NULL,
    USER_AGENT TEXT,
    BROWSER_NAME VARCHAR(100),
    BROWSER_VERSION VARCHAR(50),
 
    -- Timestamps
    OCCURRED_AT TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP,
    CREATED_AT TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP
);

-- ================================
-- FORM INTERACTION ANALYTICS TABLE
-- ================================
CREATE TABLE IF NOT EXISTS ANALYTICS_FORM_INTERACTIONS (
    ID UUID PRIMARY KEY DEFAULT GEN_RANDOM_UUID(),
    SESSION_ID UUID NOT NULL REFERENCES ANALYTICS_SESSIONS(ID) ON DELETE CASCADE,
    PAGE_VIEW_ID UUID REFERENCES ANALYTICS_PAGE_VIEWS(ID) ON DELETE CASCADE,
    USER_ID INTEGER REFERENCES USERS(ID) ON DELETE CASCADE,
 
    -- Form details
    FORM_ID VARCHAR(200),
    FORM_NAME VARCHAR(200),
    FORM_ACTION VARCHAR(1000),
    FORM_METHOD VARCHAR(20),
 
    -- Field details
    FIELD_ID VARCHAR(200),
    FIELD_NAME VARCHAR(200),
    FIELD_TYPE VARCHAR(50),
    FIELD_LABEL VARCHAR(500),
 
    -- Interaction details
    INTERACTION_TYPE VARCHAR(20) NOT NULL, -- 'focus', 'blur', 'change', 'submit', 'error', 'validation_error'
    FIELD_VALUE TEXT, -- Sanitized/hashed for privacy
    VALIDATION_ERROR TEXT,
    TIME_TO_COMPLETE INTEGER, -- milliseconds
    -- Context data
    PAGE_URL TEXT NOT NULL,
 
    -- Timestamps
    OCCURRED_AT TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP,
    CREATED_AT TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP
);

-- ================================
-- HOVER ANALYTICS TABLE
-- ================================
CREATE TABLE IF NOT EXISTS ANALYTICS_HOVER_EVENTS (
    ID UUID PRIMARY KEY DEFAULT GEN_RANDOM_UUID(),
    SESSION_ID UUID NOT NULL REFERENCES ANALYTICS_SESSIONS(ID) ON DELETE CASCADE,
    PAGE_VIEW_ID UUID REFERENCES ANALYTICS_PAGE_VIEWS(ID) ON DELETE CASCADE,
    USER_ID INTEGER REFERENCES USERS(ID) ON DELETE CASCADE,
 
    -- Element details
    ELEMENT_SELECTOR VARCHAR(1000) NOT NULL,
    ELEMENT_TEXT VARCHAR(1000),
    ELEMENT_TAG VARCHAR(50),
    ELEMENT_ID VARCHAR(200),
    ELEMENT_CLASS VARCHAR(500),
 
    -- Hover details
    HOVER_DURATION INTEGER NOT NULL, -- milliseconds
    -- Context data
    PAGE_URL TEXT NOT NULL,
 
    -- Timestamps
    HOVER_STARTED_AT TIMESTAMP WITH TIME ZONE,
    HOVER_ENDED_AT TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP,
    CREATED_AT TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP
);

-- ================================
-- SUBSCRIPTION ANALYTICS TABLE
-- ================================
CREATE TABLE IF NOT EXISTS ANALYTICS_SUBSCRIPTION_EVENTS (
    ID UUID PRIMARY KEY DEFAULT GEN_RANDOM_UUID(),
    SESSION_ID UUID REFERENCES ANALYTICS_SESSIONS(ID) ON DELETE CASCADE,
    USER_ID INTEGER REFERENCES USERS(ID) ON DELETE CASCADE,
 
    -- Event data
    EVENT_TYPE VARCHAR(50) NOT NULL, -- 'subscription_view', 'plan_comparison', 'upgrade_attempt', 'payment_success', 'payment_failure'
    EVENT_CATEGORY VARCHAR(100) DEFAULT 'subscription',
    EVENT_ACTION VARCHAR(100) NOT NULL,
    EVENT_LABEL VARCHAR(200),
    EVENT_VALUE DECIMAL(10, 2),
 
    -- Subscription context
    SUBSCRIPTION_PLAN_ID INTEGER REFERENCES SUBSCRIPTION_PLANS(ID) ON DELETE CASCADE,
    PLAN_NAME VARCHAR(100),
    PLAN_PRICE_CENTS INTEGER,
    BILLING_CYCLE VARCHAR(20),
 
    -- Funnel tracking
    FUNNEL_STEP VARCHAR(50), -- 'plan_view', 'checkout_start', 'payment_info', 'confirmation'
    FUNNEL_POSITION INTEGER,
 
    -- Context data
    PAGE_URL TEXT,
    REFERRER_URL TEXT,
    ADDITIONAL_DATA JSONB,
 
    -- Timestamps
    OCCURRED_AT TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP,
    CREATED_AT TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP
);

-- ================================
-- DAILY ANALYTICS AGGREGATIONS
-- ================================
CREATE TABLE IF NOT EXISTS ANALYTICS_DAILY_SUMMARY (
    ID UUID PRIMARY KEY DEFAULT GEN_RANDOM_UUID(),
    DATE DATE NOT NULL,
 
    -- Session metrics
    TOTAL_SESSIONS INTEGER DEFAULT 0,
    UNIQUE_USERS INTEGER DEFAULT 0,
    NEW_USERS INTEGER DEFAULT 0,
    RETURNING_USERS INTEGER DEFAULT 0,
 
    -- Page metrics
    TOTAL_PAGE_VIEWS INTEGER DEFAULT 0,
    UNIQUE_PAGE_VIEWS INTEGER DEFAULT 0,
    BOUNCE_RATE DECIMAL(5, 2) DEFAULT 0,
    AVG_SESSION_DURATION_SECONDS INTEGER DEFAULT 0,
 
    -- Geographic data
    TOP_COUNTRIES JSONB,
    TOP_CITIES JSONB,
 
    -- Technology data
    TOP_BROWSERS JSONB,
    TOP_DEVICES JSONB,
    TOP_OS JSONB,
 
    -- VPN/Proxy stats
    VPN_SESSIONS INTEGER DEFAULT 0,
    PROXY_SESSIONS INTEGER DEFAULT 0,
    TOR_SESSIONS INTEGER DEFAULT 0,
    VPN_PERCENTAGE DECIMAL(5, 2) DEFAULT 0,
 
    -- Subscription metrics
    SUBSCRIPTION_EVENTS INTEGER DEFAULT 0,
    PLAN_VIEWS INTEGER DEFAULT 0,
    UPGRADE_ATTEMPTS INTEGER DEFAULT 0,
    SUCCESSFUL_UPGRADES INTEGER DEFAULT 0,
 
    -- Timestamps
    CREATED_AT TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP,
    UPDATED_AT TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP,
    UNIQUE(DATE)
);

-- ================================
-- INDEXES FOR PERFORMANCE
-- ================================

-- Analytics sessions indexes
CREATE INDEX IF NOT EXISTS IDX_ANALYTICS_SESSIONS_USER_ID ON ANALYTICS_SESSIONS(USER_ID);

CREATE INDEX IF NOT EXISTS IDX_ANALYTICS_SESSIONS_SESSION_TOKEN ON ANALYTICS_SESSIONS(SESSION_TOKEN);

CREATE INDEX IF NOT EXISTS IDX_ANALYTICS_SESSIONS_IP_ADDRESS ON ANALYTICS_SESSIONS(IP_ADDRESS);

CREATE INDEX IF NOT EXISTS IDX_ANALYTICS_SESSIONS_COUNTRY_CODE ON ANALYTICS_SESSIONS(COUNTRY_CODE);

CREATE INDEX IF NOT EXISTS IDX_ANALYTICS_SESSIONS_IS_VPN ON ANALYTICS_SESSIONS(IS_VPN);

CREATE INDEX IF NOT EXISTS IDX_ANALYTICS_SESSIONS_START_AT ON ANALYTICS_SESSIONS(SESSION_START_AT);

CREATE INDEX IF NOT EXISTS IDX_ANALYTICS_SESSIONS_LAST_ACTIVITY ON ANALYTICS_SESSIONS(LAST_ACTIVITY_AT);

-- Analytics page views indexes
CREATE INDEX IF NOT EXISTS IDX_ANALYTICS_PAGE_VIEWS_SESSION_ID ON ANALYTICS_PAGE_VIEWS(SESSION_ID);

CREATE INDEX IF NOT EXISTS IDX_ANALYTICS_PAGE_VIEWS_USER_ID ON ANALYTICS_PAGE_VIEWS(USER_ID);

CREATE INDEX IF NOT EXISTS IDX_ANALYTICS_PAGE_VIEWS_PAGE_PATH ON ANALYTICS_PAGE_VIEWS(PAGE_PATH);

CREATE INDEX IF NOT EXISTS IDX_ANALYTICS_PAGE_VIEWS_VIEWED_AT ON ANALYTICS_PAGE_VIEWS(VIEWED_AT);

-- Analytics clicks indexes
CREATE INDEX IF NOT EXISTS IDX_ANALYTICS_CLICKS_SESSION_ID ON ANALYTICS_CLICKS(SESSION_ID);

CREATE INDEX IF NOT EXISTS IDX_ANALYTICS_CLICKS_PAGE_VIEW_ID ON ANALYTICS_CLICKS(PAGE_VIEW_ID);

CREATE INDEX IF NOT EXISTS IDX_ANALYTICS_CLICKS_USER_ID ON ANALYTICS_CLICKS(USER_ID);

CREATE INDEX IF NOT EXISTS IDX_ANALYTICS_CLICKS_ELEMENT_TAG ON ANALYTICS_CLICKS(ELEMENT_TAG);

CREATE INDEX IF NOT EXISTS IDX_ANALYTICS_CLICKS_CLICKED_AT ON ANALYTICS_CLICKS(CLICKED_AT);

-- Analytics user behavior indexes
CREATE INDEX IF NOT EXISTS IDX_ANALYTICS_USER_BEHAVIOR_SESSION_ID ON ANALYTICS_USER_BEHAVIOR(SESSION_ID);

CREATE INDEX IF NOT EXISTS IDX_ANALYTICS_USER_BEHAVIOR_USER_ID ON ANALYTICS_USER_BEHAVIOR(USER_ID);

CREATE INDEX IF NOT EXISTS IDX_ANALYTICS_USER_BEHAVIOR_TYPE ON ANALYTICS_USER_BEHAVIOR(BEHAVIOR_TYPE);

CREATE INDEX IF NOT EXISTS IDX_ANALYTICS_USER_BEHAVIOR_OCCURRED_AT ON ANALYTICS_USER_BEHAVIOR(OCCURRED_AT);

-- Analytics errors indexes
CREATE INDEX IF NOT EXISTS IDX_ANALYTICS_ERRORS_SESSION_ID ON ANALYTICS_ERRORS(SESSION_ID);

CREATE INDEX IF NOT EXISTS IDX_ANALYTICS_ERRORS_PAGE_VIEW_ID ON ANALYTICS_ERRORS(PAGE_VIEW_ID);

CREATE INDEX IF NOT EXISTS IDX_ANALYTICS_ERRORS_USER_ID ON ANALYTICS_ERRORS(USER_ID);

CREATE INDEX IF NOT EXISTS IDX_ANALYTICS_ERRORS_ERROR_TYPE ON ANALYTICS_ERRORS(ERROR_TYPE);

CREATE INDEX IF NOT EXISTS IDX_ANALYTICS_ERRORS_OCCURRED_AT ON ANALYTICS_ERRORS(OCCURRED_AT);

-- Analytics form interactions indexes
CREATE INDEX IF NOT EXISTS IDX_ANALYTICS_FORM_INTERACTIONS_SESSION_ID ON ANALYTICS_FORM_INTERACTIONS(SESSION_ID);

CREATE INDEX IF NOT EXISTS IDX_ANALYTICS_FORM_INTERACTIONS_PAGE_VIEW_ID ON ANALYTICS_FORM_INTERACTIONS(PAGE_VIEW_ID);

CREATE INDEX IF NOT EXISTS IDX_ANALYTICS_FORM_INTERACTIONS_USER_ID ON ANALYTICS_FORM_INTERACTIONS(USER_ID);

CREATE INDEX IF NOT EXISTS IDX_ANALYTICS_FORM_INTERACTIONS_FORM_ID ON ANALYTICS_FORM_INTERACTIONS(FORM_ID);

CREATE INDEX IF NOT EXISTS IDX_ANALYTICS_FORM_INTERACTIONS_INTERACTION_TYPE ON ANALYTICS_FORM_INTERACTIONS(INTERACTION_TYPE);

CREATE INDEX IF NOT EXISTS IDX_ANALYTICS_FORM_INTERACTIONS_OCCURRED_AT ON ANALYTICS_FORM_INTERACTIONS(OCCURRED_AT);

-- Analytics hover events indexes
CREATE INDEX IF NOT EXISTS IDX_ANALYTICS_HOVER_EVENTS_SESSION_ID ON ANALYTICS_HOVER_EVENTS(SESSION_ID);

CREATE INDEX IF NOT EXISTS IDX_ANALYTICS_HOVER_EVENTS_PAGE_VIEW_ID ON ANALYTICS_HOVER_EVENTS(PAGE_VIEW_ID);

CREATE INDEX IF NOT EXISTS IDX_ANALYTICS_HOVER_EVENTS_USER_ID ON ANALYTICS_HOVER_EVENTS(USER_ID);

CREATE INDEX IF NOT EXISTS IDX_ANALYTICS_HOVER_EVENTS_ELEMENT_SELECTOR ON ANALYTICS_HOVER_EVENTS(ELEMENT_SELECTOR);

CREATE INDEX IF NOT EXISTS IDX_ANALYTICS_HOVER_EVENTS_HOVER_ENDED_AT ON ANALYTICS_HOVER_EVENTS(HOVER_ENDED_AT);

-- Analytics subscription events indexes
CREATE INDEX IF NOT EXISTS IDX_ANALYTICS_SUBSCRIPTION_EVENTS_SESSION_ID ON ANALYTICS_SUBSCRIPTION_EVENTS(SESSION_ID);

CREATE INDEX IF NOT EXISTS IDX_ANALYTICS_SUBSCRIPTION_EVENTS_USER_ID ON ANALYTICS_SUBSCRIPTION_EVENTS(USER_ID);

CREATE INDEX IF NOT EXISTS IDX_ANALYTICS_SUBSCRIPTION_EVENTS_TYPE ON ANALYTICS_SUBSCRIPTION_EVENTS(EVENT_TYPE);

CREATE INDEX IF NOT EXISTS IDX_ANALYTICS_SUBSCRIPTION_EVENTS_PLAN_ID ON ANALYTICS_SUBSCRIPTION_EVENTS(SUBSCRIPTION_PLAN_ID);

CREATE INDEX IF NOT EXISTS IDX_ANALYTICS_SUBSCRIPTION_EVENTS_OCCURRED_AT ON ANALYTICS_SUBSCRIPTION_EVENTS(OCCURRED_AT);

-- Analytics daily summary indexes
CREATE INDEX IF NOT EXISTS IDX_ANALYTICS_DAILY_SUMMARY_DATE ON ANALYTICS_DAILY_SUMMARY(DATE);

-- ================================
-- TRIGGERS FOR AUTOMATIC UPDATES
-- ================================

-- Update analytics_sessions last_activity_at on page views
CREATE OR REPLACE FUNCTION update_session_last_activity()
RETURNS TRIGGER AS $$
BEGIN
    UPDATE analytics_sessions 
    SET last_activity_at = NEW.viewed_at,
        total_page_views = total_page_views + 1,
        updated_at = CURRENT_TIMESTAMP
    WHERE id = NEW.session_id;
    RETURN NEW;
END;
$$ LANGUAGE plpgsql;

CREATE TRIGGER trigger_update_session_last_activity
    AFTER INSERT ON analytics_page_views
    FOR EACH ROW
    EXECUTE FUNCTION update_session_last_activity();

-- Update analytics_sessions click count on clicks
CREATE OR REPLACE FUNCTION update_session_click_count()
RETURNS TRIGGER AS $$
BEGIN
    UPDATE analytics_sessions 
    SET total_clicks = total_clicks + 1,
        last_activity_at = NEW.clicked_at,
        updated_at = CURRENT_TIMESTAMP
    WHERE id = NEW.session_id;
    RETURN NEW;
END;
$$ LANGUAGE plpgsql;

CREATE TRIGGER trigger_update_session_click_count
    AFTER INSERT ON analytics_clicks
    FOR EACH ROW
    EXECUTE FUNCTION update_session_click_count();

-- Update updated_at timestamps
CREATE TRIGGER trigger_analytics_sessions_updated_at
    BEFORE UPDATE ON analytics_sessions
    FOR EACH ROW
    EXECUTE FUNCTION update_updated_at_column();

CREATE TRIGGER trigger_analytics_page_views_updated_at
    BEFORE UPDATE ON analytics_page_views
    FOR EACH ROW
    EXECUTE FUNCTION update_updated_at_column();

CREATE TRIGGER trigger_analytics_daily_summary_updated_at
    BEFORE UPDATE ON analytics_daily_summary
    FOR EACH ROW
    EXECUTE FUNCTION update_updated_at_column();

-- ================================
-- COMMENTS FOR DOCUMENTATION
-- ================================

COMMENT ON TABLE analytics_sessions IS 'Core analytics sessions tracking user visits with device, location, and VPN detection';
COMMENT ON TABLE analytics_page_views IS 'Page view tracking with performance metrics and engagement data';
COMMENT ON TABLE analytics_clicks IS 'Click tracking for heatmap generation and user interaction analysis';
COMMENT ON TABLE analytics_user_behavior IS 'General user behavior tracking for feature usage and conversion analysis';
COMMENT ON TABLE analytics_subscription_events IS 'Subscription-specific event tracking for funnel analysis';
COMMENT ON TABLE analytics_daily_summary IS 'Daily aggregated analytics data for performance optimization';

-- ================================
-- VERIFICATION QUERIES
-- ================================
-- Uncomment to verify the migration worked correctly:
-- SELECT table_name, column_name, data_type 
-- FROM information_schema.columns 
-- WHERE table_name LIKE 'analytics_%' 
-- ORDER BY table_name, ordinal_position
-- LIMIT 20;