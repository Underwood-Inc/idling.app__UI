services:
  postgres:
    image: postgres:latest
    container_name: postgres
    env_file:
      - ./.env.local
    ports:
      - '5432:5432'
    volumes:
      - ./docker-postgres/init.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U postgres']
      interval: 10s
      timeout: 5s
      retries: 5
  nextjs:
    image: node:latest
    container_name: nextjs
    working_dir: /app
    volumes:
      - .:/app
      - /app/node_modules
    ports:
      - '3000:3000'
    env_file:
      - ./.env.local
    environment:
      # Ensure Correct Hostname: In Docker Compose, services should communicate using their service names.
      # For example, if your PostgreSQL service is named postgres, the connection string should use postgres
      # as the hostname.
      # By defining this here, we override the value defined in ./.env.local
      POSTGRES_HOST: postgres
      IS_DOCKERIZED: true
    command: sh -c "npm install --legacy-peer-deps && npm run dev"
    depends_on:
      postgres:
        condition: service_healthy
