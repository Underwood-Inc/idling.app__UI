/**
 * ESLint Configuration for Documentation Coverage Report JavaScript
 * 
 * This configuration is specifically for JavaScript files generated by the
 * documentation coverage tool and embedded in HTML reports.
 */

module.exports = {
  // Environment settings for modern JavaScript
  env: {
    browser: true,
    es6: true,
    es2017: true,
    es2020: true,
    node: false
  },
  
  // Parser options for modern JavaScript
  parserOptions: {
    ecmaVersion: 2020,
    sourceType: 'module',
    ecmaFeatures: {
      modules: true
    }
  },
  
  // Extend recommended configurations
  extends: [
    'eslint:recommended'
  ],
  
  // Global variables available in browser environment
  globals: {
    // Browser globals
    window: 'readonly',
    document: 'readonly',
    console: 'readonly',
    localStorage: 'readonly',
    setTimeout: 'readonly',
    clearTimeout: 'readonly',
    setInterval: 'readonly',
    clearInterval: 'readonly',
    
    // Modern JavaScript built-ins
    Set: 'readonly',
    Map: 'readonly',
    WeakSet: 'readonly',
    WeakMap: 'readonly',
    Promise: 'readonly',
    Array: 'readonly',
    Object: 'readonly',
    JSON: 'readonly',
    
    // External libraries that might be loaded
    hljs: 'readonly', // highlight.js
    
    // Module system (for ES modules)
    module: 'readonly',
    exports: 'readonly',
    require: 'readonly'
  },
  
  // Rules specific to this JavaScript
  rules: {
    // Allow console methods for debugging and logging
    'no-console': ['warn', {
      allow: ['log', 'warn', 'error', 'info', 'table']
    }],
    
    // Enforce modern JavaScript practices
    'prefer-const': 'error',
    'prefer-arrow-callback': 'warn',
    'prefer-template': 'warn',
    'no-var': 'error',
    
    // Allow unused variables with underscore prefix
    'no-unused-vars': ['warn', {
      varsIgnorePattern: '^_',
      argsIgnorePattern: '^_'
    }],
    
    // Relaxed rules for generated code
    'no-undef': 'error',
    'no-unused-expressions': 'warn',
    'no-unreachable': 'error',
    
    // Code quality
    'eqeqeq': ['error', 'always'],
    'curly': ['error', 'all'],
    'no-eval': 'error',
    'no-implied-eval': 'error',
    
    // Modern syntax
    'object-shorthand': 'warn',
    'prefer-destructuring': 'warn'
  },
  
  // Override for specific file patterns
  overrides: [
    {
      // Core modules with stricter rules
      files: ['core/**/*.js'],
      rules: {
        'no-console': 'error',
        'prefer-const': 'error',
        'no-var': 'error'
      }
    },
    {
      // Component files
      files: ['components/**/*.js'],
      rules: {
        'no-console': ['warn', { allow: ['warn', 'error'] }]
      }
    },
    {
      // Utility files
      files: ['utils/**/*.js'],
      rules: {
        'no-console': ['warn', { allow: ['warn', 'error'] }]
      }
    }
  ]
}; 